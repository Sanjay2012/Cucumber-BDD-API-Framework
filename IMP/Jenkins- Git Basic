# Manual approch from workspace
- Workspace loaction
- choose Build category as "Invoke top level Maven targets"
- clean test verify
- clean test verify -Dcucumber.options="--tags=@End2End"

#Parameterise



# Every fifteen minutes (perhaps at :07, :22, :37, :52):
H/15 * * * *
# Every ten minutes in the first half of every hour (three times, perhaps at :04, :14, :24):
H(0-29)/10 * * * *
# Once every two hours at 45 minutes past the hour starting at 9:45 AM and finishing at 3:45 PM every weekday:
45 9-16/2 * * 1-5
# Once in every two hour slot between 8 AM and 4 PM every weekday (perhaps at 9:38 AM, 11:38 AM, 1:38 PM, 3:38 PM):
H H(8-15)/2 * * 1-5
# Once a day on the 1st and 15th of every month except December:
H H 1,15 1-11 *


***************************************************************************************************************
#Basic GIT commands

# Tell Git who you are : 
git config --global user.name "Sam Smith"
git config --global user.email sam@example.com

# Create a new local repository: git init

# Check out a repository: 
Local :        git clone /path/to/repository
remote server: git clone username@host:/path/to/repository     

# Add files : git add <file name>  or git add *

# Commit
Commit changes to head (but not yet to the remote repository)  : git commit -m "Commit message"

Commit any files you've added
with git add, and also commit                 : git commit -a
any files you've changed since
then:

# Push : git push origin master

# Status : git status

# Connect to a remote repository : 
git remote add origin <server>
git remote -v

# Branches

Create a new branch and switch to it: git checkout -b <branchname>
Switch from one branch to another:    git checkout <branchname>
List all the branches             :   git branch
Delete the feature branch:            git branch -d <branchname>
Push the branch to your remote repository : git push origin <branchname>
Push all branches to your remote          : git push --all origin
Delete a branch on your remote            : git push origin :<branchname>


# Update from the remote repository

Fetch and merge changes on the remote :              git pull
To merge a different branch into your active branch: git merge <branchname>
View all the merge conflicts:                        git diff
View the conflicts against the base file:            git diff --base <filename>
Preview changes, before merging:                     git diff <sourcebranch> <targetbranch>

After you have manually resolved
any conflicts, you mark the changed file:            git add <filename>


# Undo local changes

If you mess up, you can replace
the changes in your working tree
with the last content in head:                       git checkout -- <filename>
Changes already added to the
index, as well as new files, will be
kept.



Instead, to drop all your local
changes and commits, fetch the                       git fetch origin
latest history from the server and                   git reset --hard origin/master
point your local master branch at
it, do this:






